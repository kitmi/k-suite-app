"use strict";

require("source-map-support/register");

const {
  withName,
  withExtraInfo,
  withExpose
} = require('./Helpers');

const RichInfoError = withExtraInfo(withName(Error));
const RequestError = withExpose(RichInfoError);

class AppError extends RichInfoError {
  constructor(message, code, otherExtra) {
    if (arguments.length === 2 && typeof code === 'object') {
      otherExtra = code;
      code = undefined;
    } else if (code !== undefined && otherExtra && !('code' in otherExtra)) {
      otherExtra = Object.assign({}, otherExtra, {
        code
      });
    }

    super(message, otherExtra);

    if (code !== undefined) {
      this.code = code;
    }
  }

}

class InvalidConfiguration extends AppError {
  constructor(message, app, item) {
    super(message, 'E_INVALID_CONFIG', {
      app: app.name,
      configNode: item
    });
  }

}

exports.RequestError = RequestError;
exports.AppError = AppError;
exports.RichInfoError = RichInfoError;
exports.InvalidConfiguration = InvalidConfiguration;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9FcnJvcnMuanMiXSwibmFtZXMiOlsid2l0aE5hbWUiLCJ3aXRoRXh0cmFJbmZvIiwid2l0aEV4cG9zZSIsInJlcXVpcmUiLCJSaWNoSW5mb0Vycm9yIiwiRXJyb3IiLCJSZXF1ZXN0RXJyb3IiLCJBcHBFcnJvciIsImNvbnN0cnVjdG9yIiwibWVzc2FnZSIsImNvZGUiLCJvdGhlckV4dHJhIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwidW5kZWZpbmVkIiwiT2JqZWN0IiwiYXNzaWduIiwiSW52YWxpZENvbmZpZ3VyYXRpb24iLCJhcHAiLCJpdGVtIiwibmFtZSIsImNvbmZpZ05vZGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7OztBQU9BLE1BQU07QUFBRUEsRUFBQUEsUUFBRjtBQUFZQyxFQUFBQSxhQUFaO0FBQTJCQyxFQUFBQTtBQUEzQixJQUEwQ0MsT0FBTyxDQUFDLFdBQUQsQ0FBdkQ7O0FBRUEsTUFBTUMsYUFBYSxHQUFHSCxhQUFhLENBQUNELFFBQVEsQ0FBQ0ssS0FBRCxDQUFULENBQW5DO0FBQ0EsTUFBTUMsWUFBWSxHQUFHSixVQUFVLENBQUNFLGFBQUQsQ0FBL0I7O0FBT0EsTUFBTUcsUUFBTixTQUF1QkgsYUFBdkIsQ0FBcUM7QUFNakNJLEVBQUFBLFdBQVcsQ0FBQ0MsT0FBRCxFQUFVQyxJQUFWLEVBQWdCQyxVQUFoQixFQUE0QjtBQUNuQyxRQUFJQyxTQUFTLENBQUNDLE1BQVYsS0FBcUIsQ0FBckIsSUFBMEIsT0FBT0gsSUFBUCxLQUFnQixRQUE5QyxFQUF3RDtBQUNwREMsTUFBQUEsVUFBVSxHQUFHRCxJQUFiO0FBQ0FBLE1BQUFBLElBQUksR0FBR0ksU0FBUDtBQUNILEtBSEQsTUFHTyxJQUFJSixJQUFJLEtBQUtJLFNBQVQsSUFBc0JILFVBQXRCLElBQW9DLEVBQUUsVUFBVUEsVUFBWixDQUF4QyxFQUFpRTtBQUNwRUEsTUFBQUEsVUFBVSxHQUFHSSxNQUFNLENBQUNDLE1BQVAsQ0FBYyxFQUFkLEVBQWtCTCxVQUFsQixFQUE4QjtBQUFFRCxRQUFBQTtBQUFGLE9BQTlCLENBQWI7QUFDSDs7QUFFRCxVQUFNRCxPQUFOLEVBQWVFLFVBQWY7O0FBRUEsUUFBSUQsSUFBSSxLQUFLSSxTQUFiLEVBQXdCO0FBS3BCLFdBQUtKLElBQUwsR0FBWUEsSUFBWjtBQUNIO0FBQ0o7O0FBdkJnQzs7QUErQnJDLE1BQU1PLG9CQUFOLFNBQW1DVixRQUFuQyxDQUE0QztBQU14Q0MsRUFBQUEsV0FBVyxDQUFDQyxPQUFELEVBQVVTLEdBQVYsRUFBZUMsSUFBZixFQUFxQjtBQUM1QixVQUFNVixPQUFOLEVBQWUsa0JBQWYsRUFBbUM7QUFBRVMsTUFBQUEsR0FBRyxFQUFFQSxHQUFHLENBQUNFLElBQVg7QUFBaUJDLE1BQUFBLFVBQVUsRUFBRUY7QUFBN0IsS0FBbkM7QUFDSDs7QUFSdUM7O0FBVzVDRyxPQUFPLENBQUNoQixZQUFSLEdBQXVCQSxZQUF2QjtBQUNBZ0IsT0FBTyxDQUFDZixRQUFSLEdBQW1CQSxRQUFuQjtBQUNBZSxPQUFPLENBQUNsQixhQUFSLEdBQXdCQSxhQUF4QjtBQUNBa0IsT0FBTyxDQUFDTCxvQkFBUixHQUErQkEsb0JBQS9CIiwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qKlxuICogRXJyb3IgZGVmaW5pdGlvbnMuXG4gKiBAbW9kdWxlIEVycm9yc1xuICovXG5cbmNvbnN0IHsgd2l0aE5hbWUsIHdpdGhFeHRyYUluZm8sIHdpdGhFeHBvc2UgfSA9IHJlcXVpcmUoJy4vSGVscGVycycpO1xuXG5jb25zdCBSaWNoSW5mb0Vycm9yID0gd2l0aEV4dHJhSW5mbyh3aXRoTmFtZShFcnJvcikpO1xuY29uc3QgUmVxdWVzdEVycm9yID0gd2l0aEV4cG9zZShSaWNoSW5mb0Vycm9yKTtcblxuLyoqXG4gKiBFcnJvciBjYXVzZWQgYnkgYWxsIGtpbmRzIG9mIHJ1bnRpbWUgZXJyb3JzLlxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBSaWNoSW5mb0Vycm9yICBcbiAqL1xuY2xhc3MgQXBwRXJyb3IgZXh0ZW5kcyBSaWNoSW5mb0Vycm9yIHtcbiAgICAvKiogICAgIFxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBtZXNzYWdlIC0gRXJyb3IgbWVzc2FnZVxuICAgICAqIEBwYXJhbSB7Kn0gY29kZSBcbiAgICAgKiBAcGFyYW0geyp9IG90aGVyRXh0cmFcbiAgICAgKi9cbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBjb2RlLCBvdGhlckV4dHJhKSB7XG4gICAgICAgIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAyICYmIHR5cGVvZiBjb2RlID09PSAnb2JqZWN0Jykge1xuICAgICAgICAgICAgb3RoZXJFeHRyYSA9IGNvZGU7XG4gICAgICAgICAgICBjb2RlID0gdW5kZWZpbmVkOyAgICAgICAgICAgIFxuICAgICAgICB9IGVsc2UgaWYgKGNvZGUgIT09IHVuZGVmaW5lZCAmJiBvdGhlckV4dHJhICYmICEoJ2NvZGUnIGluIG90aGVyRXh0cmEpKSB7XG4gICAgICAgICAgICBvdGhlckV4dHJhID0gT2JqZWN0LmFzc2lnbih7fSwgb3RoZXJFeHRyYSwgeyBjb2RlIH0pO1xuICAgICAgICB9XG5cbiAgICAgICAgc3VwZXIobWVzc2FnZSwgb3RoZXJFeHRyYSk7XG5cbiAgICAgICAgaWYgKGNvZGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgLyoqXG4gICAgICAgICAgICAgKiBFcnJvciBDb2RlXG4gICAgICAgICAgICAgKiBAbWVtYmVyIHtpbnRlZ2VyfHN0cmluZ31cbiAgICAgICAgICAgICAqL1xuICAgICAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgfVxuICAgIH1cbn0gXG5cbi8qKlxuICogRXJyb3IgY2F1c2VkIGJ5IGludmFsaWQgY29uZmlndXJhdGlvbi5cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgQXBwRXJyb3IgIFxuICovXG5jbGFzcyBJbnZhbGlkQ29uZmlndXJhdGlvbiBleHRlbmRzIEFwcEVycm9yIHtcbiAgICAvKipcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbWVzc2FnZSAtIEVycm9yIG1lc3NhZ2VcbiAgICAgKiBAcGFyYW0ge0FwcH0gW2FwcF0gLSBUaGUgcmVsYXRlZCBhcHAgbW9kdWxlXG4gICAgICogQHBhcmFtIHtzdHJpbmd9IFtpdGVtXSAtIFRoZSByZWxhdGVkIGNvbmZpZyBpdGVtICAgXG4gICAgICovIFxuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGFwcCwgaXRlbSkgeyAgICAgICAgXG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdFX0lOVkFMSURfQ09ORklHJywgeyBhcHA6IGFwcC5uYW1lLCBjb25maWdOb2RlOiBpdGVtIH0pO1xuICAgIH1cbn1cblxuZXhwb3J0cy5SZXF1ZXN0RXJyb3IgPSBSZXF1ZXN0RXJyb3I7XG5leHBvcnRzLkFwcEVycm9yID0gQXBwRXJyb3I7XG5leHBvcnRzLlJpY2hJbmZvRXJyb3IgPSBSaWNoSW5mb0Vycm9yO1xuZXhwb3J0cy5JbnZhbGlkQ29uZmlndXJhdGlvbiA9IEludmFsaWRDb25maWd1cmF0aW9uOyJdfQ==